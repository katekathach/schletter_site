/*! LGMaps v3.1.2, 2017-09-09 */

! function(t) {
    function i() {
        var t = (new Date).getTime();
        return "undefined" != typeof performance && "function" == typeof performance.now && (t += performance.now()), "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(i) {
            var o = (t + 16 * Math.random()) % 16 | 0;
            return t = Math.floor(t / 16), ("x" === i ? o : 3 & o | 8).toString(16)
        })
    }
    window.LGMaps = window.LGMaps || {
        maps: {}
    }, window.mobileAndTabletcheck = function() {
        var t = !1;
        return function(i) {
            (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(i) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(i.substr(0, 4))) && (t = !0)
        }(navigator.userAgent || navigator.vendor || window.opera), t
    };
    var o = window.mobileAndTabletcheck(),
        e = "ontouchstart" in window || navigator.MaxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;
    Raphael.el.trigger = function(t) {
        for (var i = 0, o = this.events.length; i < o; i++) this.events[i].name == t && this.events[i].f.call(this)
    }, t.fn.LGMap = function(a) {
        var n = t.extend({
            responsive: !0,
            offColor: "#ccc",
            strokeColor: "#24221f",
            offStrokeColor: "#444",
            strokeWidth: 1,
            abbreviationColor: "#f2f2f2",
            abbreviationFontSize: 12,
            displayAbbreviations: !0,
            displayAbbreviationOnDisabledStates: !1,
            autoPositionAbbreviations: !1,
            stateClickAction: "text",
            textPosition: "right",
            hrefTarget: "_blank",
            textAreaWidth: 300,
            textAreaHeight: 300,
            pinSize: 10,
            displayMousePosition: !1,
            enablePanZoom: !1,
            mapFolder: "maps/",
            initialZoom: 1,
            initialMapX: 0,
            initialMapY: 0,
            zoomSpeed: 1,
            displayPreloader: !0,
            preloaderText: "Loading map...",
            onReady: function() {},
            onStateClick: function() {},
            onStateOver: function() {},
            onStateOut: function() {}
        }, a);
        if (!n.map) throw new Error("LGMap plugin was called without a map property");
        var l = t(this);
        if (n.displayPreloader) var s = t('<div class="lg-map-preloader">' + n.preloaderText + "</div>").appendTo(l);
        var r, p, c = 0,
            d = 0,
            m = null,
            h = !1,
            f = t(window),
            u = f.width(),
            g = 0,
            v = !1,
            x = [],
            w = [],
            b = l.parent().width(),
            k = t('<div class="lg-map"></div>').appendTo(l),
            y = "lg-map-" + i();
        k.attr("id", y);
        var P, M = n.mapFolder + n.map + ".js";
        t.getScript(M, function(i) {
            function a() {
                function i(i) {
                    var o = "";
                    return t.each(i, function(i, e) {
                        t.each(A, function(t, i) {
                            i.name === e && (o += i.path + " ")
                        })
                    }), o
                }

                function a(i, o) {
                    var e;
                    return t.each(o, function(t, o) {
                        for (e = i.length; e--;) i[e].name === o && i.splice(e, 1)
                    }), i
                }

                function M() {
                    b = l.parent().width(), u = f.width(), "text" === S.stateClickAction ? "bottom" === (p = u >= 767 ? S.textPosition : "bottom") ? (Z = (L = b) / V, l.css({
                        width: L + "px",
                        height: Z + P.height() + "px"
                    }), P.css({
                        width: L + "px",
                        marginTop: Z + "px",
                        height: "auto"
                    })) : (L = b - S.textAreaWidth, Z = L / V, l.css({
                        width: u >= 767 ? L + S.textAreaWidth + "px" : L + "px",
                        height: Z + "px"
                    }), P.css({
                        width: u >= 767 ? S.textAreaWidth + "px" : L + "px",
                        height: u >= 767 ? Z + "px" : S.textAreaHeight,
                        display: "inline",
                        float: u >= 767 ? S.textPosition : "none",
                        marginTop: u >= 767 ? 0 : Z + "px"
                    })) : (Z = (L = b) / V, l.css({
                        width: L + "px",
                        height: Z + "px"
                    })), r.changeSize(L, Z, !0, !1)
                }

                function C(i) {
                    e && o || (X(), k.after(t("<div />").addClass("lg-map-tooltip")), t(".lg-map-tooltip").html(i), T(), t(".lg-map-tooltip").fadeIn())
                }

                function T() {
                    g = -40, v = d - t(".lg-map-tooltip").height() + g < 0, g = v ? 40 : g - t(".lg-map-tooltip").height(), t(".lg-map-tooltip").css({
                        left: c - t(".lg-map-tooltip").width() / 2,
                        top: d + g
                    })
                }

                function X() {
                    k.next(".lg-map-tooltip").remove()
                }

                function W(i) {
                    o = t(window).scrollTop();
                    if (i && i.pageX ? (c = i.pageX, d = i.pageY - o) : (c = event.clientX + document.body.scrollLeft, d = event.clientY + document.body.scrollTop), c < 0 && (c = 0), d < 0 && (d = 0), T(), S.displayMousePosition) {
                        var o = f.scrollTop(),
                            e = l.offset(),
                            a = Math.round(c - e.left),
                            n = Math.round(d - e.top + o),
                            s = Math.round(a - S.mapWidth / 2),
                            r = Math.round(n - S.mapHeight / 2);
                        t(".mouse-position .xPos").text("X: " + a), t(".mouse-position .yPos").text("Y: " + n), t(".mouse-position .mapXPos").text("Map X: " + s), t(".mouse-position .mapYPos").text("Map Y: " + r)
                    }
                }

                function Y() {
                    tt.x = U[0], tt.y = U[1], tt.width = U[2], tt.height = U[3]
                }

                function F(t, i, o, e) {
                    tt.x = t, tt.y = i, tt.width = o, tt.height = e, ot = !0
                }

                function O() {
                    $.dx = U[0], $.dy = U[1], it = !0
                }

                function B(t, i) {
                    $.dx = U[0] - t / J, $.dy = U[1] - i / J;
                    var o = Q - U[3],
                        e = N - U[2];
                    $.dx >= e && ($.dx = e), $.dx <= 0 && ($.dx = 0), $.dy >= o && ($.dy = o), $.dy <= 0 && ($.dy = 0), r.setViewBox($.dx, $.dy, U[2], U[3], !1)
                }

                function D() {
                    it = !1, U[0] = $.dx, U[1] = $.dy
                }

                function H(t) {
                    I = 1, U[0] = 0, U[1] = 0, U[2] = N, U[3] = Q, tt.x = 0, tt.y = 0, tt.width = N, tt.height = Q, t.animateViewBox(tt, U[0], U[1], U[2], U[3], 250, F), ot = !0
                }
                var L = S.mapWidth,
                    Z = S.mapHeight,
                    V = L / Z;
                if (S.enablePanZoom) var j = t('<div class="lg-map-console"><ul><li class="lg-map-zoom-in"></li><li class="lg-map-zoom-out"></li><li class="lg-map-move-up"></li><li class="lg-map-move-down"></li><li class="lg-map-move-left"></li><li class="lg-map-move-right"></li><li class="lg-map-zoom-reset"></li></ul></div>').appendTo(l);
                S.initialZoom = S.initialZoom >= 1 ? S.initialZoom : 1;
                var q = -S.mapWidth / 2,
                    G = S.mapWidth / 2,
                    R = -S.mapHeight / 2,
                    _ = S.mapHeight / 2;
                S.initialMapX = S.initialMapX >= q && S.initialMapX <= G ? S.initialMapX : 0, S.initialMapY = S.initialMapY >= R && S.initialMapY <= _ ? S.initialMapY : 0;
                var E, I = S.initialZoom,
                    N = L,
                    Q = Z,
                    U = [S.initialMapX, S.initialMapY, N, Q],
                    J = 1,
                    K = !1,
                    $ = (t(window), {}),
                    tt = {},
                    it = !1,
                    ot = !0;
                S.displayMousePosition && (t('<div class="mouse-position"><div class="xPos">X: 0</div><div class="yPos">Y: 0</div><div class="mapXPos">Map X: 0</div><div class="mapYPos">Map Y: 0</div></div>').appendTo(l), t("body").css("cursor", "crosshair")), "text" === S.stateClickAction && ((P = t('<div class="lg-map-text"></div>').appendTo(l)).html(S.defaultText), "left" === S.textPosition && (k.css({
                        left: "auto",
                        right: "0"
                    }), j.css({
                        left: "auto",
                        right: "10px"
                    }))), S.groups && S.groups.length && t.each(S.groups, function(t, o) {
                        o.members && o.members.length && (o.path = i(o.members), A.push(o), A = a(A, o.members))
                    }), l.mousemove(function(t) {
                        W(t)
                    }),
                    function() {
                        r = new ScaleRaphael(y, S.mapWidth, S.mapHeight);
                        for (var i, o, e, a, l = [], s = {
                                "stroke-width": S.strokeWidth || 1
                            }, p = {
                                "font-family": "Arial, sans-serif",
                                "font-weight": "bold",
                                "font-size": S.abbreviationFontSize,
                                fill: S.abbreviationColor,
                                "z-index": 1e3
                            }, c = {
                                fill: "#f00",
                                "stroke-width": 0,
                                opacity: 0
                            }, d = 0, f = A.length; d < f; d++) {
                            s = A[d].enable ? t.extend(s, {
                                fill: A[d].color,
                                stroke: S.strokeColor,
                                id: d
                            }) : t.extend(s, {
                                fill: S.offColor,
                                stroke: S.offStrokeColor
                            }), c = t.extend(c, {
                                cursor: A[d].enable ? S.displayMousePosition ? "crosshair" : "pointer" : "default"
                            }), (i = r.path(A[d].path).attr(s)).node.id = d, l.push(i), (A[d].enable && S.displayAbbreviations || !A[d].enable && S.displayAbbreviationOnDisabledStates) && (S.autoPositionAbbreviations ? (e = (o = i.getBBox()).x + o.width / 2 + A[d].textX, a = o.y + o.height / 2 + A[d].textY) : (e = A[d].textX, a = A[d].textY), w.push(r.text(e, a, A[d].abbreviation).attr(p)));
                            var u = r.path(A[d].path).attr(c);
                            u.node.id = d, u.node.setAttribute("lg-map-name", A[d].name), x.push(u), u.mouseover(function(i) {
                                i.stopPropagation();
                                var o = t(this.node).attr("id");
                                A[o].enable && (l[o] != m && l[o].animate({
                                    fill: A[o].hoverColor
                                }, 500), C(A[o].name), t.isFunction(n.onStateOver) && n.onStateOver.call(this, A[o]))
                            }), u.mouseout(function(i) {
                                var o = t(this.node).attr("id");
                                A[o].enable && (l[o] != m && l[o].animate({
                                    fill: A[o].color
                                }, 500), X(), t.isFunction(n.onStateOut) && n.onStateOut.call(this, A[o]))
                            }), u.click(function(i) {
                                var o = t(this.node).attr("id");
                                if (A[o].enable) {
                                    if ("text" === S.stateClickAction) {
                                        var e = P[0];
                                        e.scrollLeft = 0, e.scrollTop = 0
                                    }
                                    if (m) {
                                        var a = t(m.node).attr("id");
                                        m.animate({
                                            fill: h ? z[a].color : A[a].color
                                        }, 500)
                                    }
                                    h = !1, l[o].animate({
                                        fill: A[o].selectedColor
                                    }, 500), m = l[o], "text" === S.stateClickAction ? P.html(A[o].text) : "url" === S.stateClickAction && window.open(A[o].url, S.hrefTarget)
                                }
                                t.isFunction(n.onStateClick) && n.onStateClick.call(this, A[o])
                            })
                        }
                        S.displayMousePosition || (M(), S.responsive && t(window).resize(function() {
                            M()
                        }))
                    }(),
                    function() {
                        w.forEach(function(t) {
                            t.toFront()
                        }), x.forEach(function(t) {
                            t.toFront()
                        })
                    }(), z && z.length && function() {
                        for (var i = 0; i < z.length; i++) {
                            var o, e = {
                                cursor: "pointer",
                                fill: z[i].color,
                                stroke: S.strokeColor,
                                id: i
                            };
                            if (z[i].src && "" !== z[i].src) {
                                var a = z[i].pinWidth / z[i].srcWidth;
                                o = r.image(z[i].src, 0, 0, z[i].srcWidth, z[i].srcHeight).attr(e);
                                var l = -z[i].srcWidth / 2 + z[i].xPos,
                                    s = -z[i].srcHeight / 2 + z[i].yPos;
                                o.animate({
                                    transform: "T" + l + "," + s + " S" + a
                                }, 0)
                            } else o = r.circle(z[i].xPos, z[i].yPos, z[i].pinWidth || S.pinSize).attr(e);
                            o.node.id = i, o.node.setAttribute("lg-map-name", z[i].name), x.push(o), o.mouseover(function(i) {
                                i.stopPropagation();
                                var o = t(this.node).attr("id");
                                this != m && this.animate({
                                    fill: z[o].hoverColor
                                }, 500), C(z[o].name), t.isFunction(n.onStateOver) && n.onStateOver.call(this, z[o])
                            }), o.mouseout(function(i) {
                                var o = t(this.node).attr("id");
                                this != m && this.animate({
                                    fill: z[o].color
                                }, 500), X(), t.isFunction(n.onStateOut) && n.onStateOut.call(this, z[o])
                            }), o.click(function(i) {
                                var o = t(this.node).attr("id");
                                if ("text" === S.stateClickAction) {
                                    var e = P[0];
                                    e.scrollLeft = 0, e.scrollTop = 0
                                }
                                if (m) {
                                    var a = t(m.node).attr("id");
                                    m.animate({
                                        fill: h ? z[a].color : A[a].color
                                    }, 500)
                                }
                                h = !0, this.animate({
                                    fill: z[o].selectedColor
                                }, 500), m = this, "text" === S.stateClickAction ? P.html(z[o].text) : "url" === S.stateClickAction && window.open(z[o].url, S.hrefTarget), t.isFunction(n.onStateClick) && n.onStateClick.call(this, z[o])
                            })
                        }
                    }(), S.enablePanZoom && !S.displayMousePosition && function() {
                        function i() {
                            Y();
                            var t = U[2],
                                i = U[3];
                            U[2] = N / I, U[3] = Q / I, U[0] += (t - U[2]) / 2, U[1] += (i - U[3]) / 2, r.animateViewBox(tt, U[0], U[1], U[2], U[3], 250, F), J = N / U[2], J = J.toFixed(1)
                        }(E = r.rect(U[0], U[1], U[2], U[3]).attr({
                            fill: "#F00",
                            "fill-opacity": 0,
                            stroke: "none"
                        }).data({
                            disabled: !1,
                            name: "_backpan"
                        }).toBack()).drag(B, O, D), t("body").on({
                            mousewheel: function(i) {
                                t(i.target).parents(".lg-map").length && (i.preventDefault(), i.stopPropagation())
                            }
                        }), k.bind("mousewheel.map", function(t, i, o, e) {
                            if (ot) {
                                if (ot = !1, (I += i * S.zoomSpeed * (1 + I / 100)) <= 1 && (I = 1), 1 == I && H(r), 1 == I && i < 0) return;
                                Y();
                                var a = U[2],
                                    n = U[3];
                                return U[2] = N / I, U[3] = Q / I, U[0] += (a - U[2]) / 2, U[1] += (n - U[3]) / 2, r.animateViewBox(tt, U[0], U[1], U[2], U[3], 250, F), J = N / U[2], J = J.toFixed(1), !1
                            }
                        }), k.mousemove(function(i) {
                            K || 1 == I ? t(this).css("cursor", "default") : t(this).css("cursor", "move")
                        }), j.find(".lg-map-zoom-in").add(j.find(".lg-map-zoom-out")).click(function(o) {
                            if (ot) {
                                var e = t(this).hasClass("lg-map-zoom-out");
                                if (ot = !1, e && 1 === I) return void H(r);
                                var a = .5 * S.zoomSpeed * (1 + I / 100);
                                (I = e ? I - a : I + a) <= 1 && (I = 1), i(), o.stopPropagation(), o.preventDefault()
                            }
                        }), j.find(".lg-map-zoom-reset").click(function(t) {
                            H(r), t.stopPropagation(), t.preventDefault()
                        }), j.find(".lg-map-move-up").click(function(t) {
                            U[1] -= 20, U[1] <= 0 && (U[1] = 0), r.setViewBox(U[0], U[1], U[2], U[3], !1), t.stopPropagation(), t.preventDefault()
                        }), j.find(".lg-map-move-down").click(function(t) {
                            U[1] += 20;
                            var i = Q - U[3];
                            U[1] >= i && (U[1] = i), r.setViewBox(U[0], U[1], U[2], U[3], !1), t.stopPropagation(), t.preventDefault()
                        }), j.find(".lg-map-move-left").click(function(t) {
                            U[0] -= 20, U[0] <= 0 && (U[0] = 0), r.setViewBox(U[0], U[1], U[2], U[3], !1), t.stopPropagation(), t.preventDefault()
                        }), j.find(".lg-map-move-right").click(function(t) {
                            U[0] += 20;
                            var i = N - U[2];
                            U[0] >= i && (U[0] = i), r.setViewBox(U[0], U[1], U[2], U[3], !1), t.stopPropagation(), t.preventDefault()
                        }), j.fadeIn(), S.initialZoom > 1 && i()
                    }(), s && s.length && s.fadeOut()
            }

            function M() {
                r.clear(), l.find(".lg-map-console").length && l.find(".lg-map-console").remove(), l.find(".mouse-position").length && l.find(".mouse-position").remove(), l.find(".lg-map-text").length && l.find(".lg-map-text").remove(), x = [], w = []
            }
            var C = window.LGMaps.maps[n.map],
                S = t.extend(n, C.config),
                A = C.paths,
                z = C.pins;
            a(), l.on("stateClick", function(i, o) {
                t.each(x, function(t, i) {
                    pathName = i.node.getAttribute("lg-map-name"), o === pathName && x[t].trigger("click")
                })
            }), l.on("stateUnClick", function() {
                if (m) {
                    var i = t(m.node).attr("id");
                    m.animate({
                        fill: h ? z[i].color : A[i].color
                    }, 500), "text" === S.stateClickAction && P.html(S.defaultText)
                }
            }), l.on("reDraw", function(i, o) {
                o && (o.config && (S = t.extend(S, o.config)), o.pins && (z = o.pins), o.paths && (A = o.paths), s && s.length && s.fadeIn(), M(), a())
            }), n.onReady.call(this)
        })
    }
}(jQuery);